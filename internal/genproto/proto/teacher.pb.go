// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.23.3
// source: teacher.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExperienceYears   int32   `protobuf:"varint,2,opt,name=experience_years,json=experienceYears,proto3" json:"experience_years,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,3,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	ProfilePictureUrl string  `protobuf:"bytes,4,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	Contact           string  `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
	GraduatedStudents int32   `protobuf:"varint,6,opt,name=graduated_students,json=graduatedStudents,proto3" json:"graduated_students,omitempty"`
	Bio               string  `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (x *CreateTeacher) Reset() {
	*x = CreateTeacher{}
	mi := &file_teacher_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeacher) ProtoMessage() {}

func (x *CreateTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_teacher_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeacher.ProtoReflect.Descriptor instead.
func (*CreateTeacher) Descriptor() ([]byte, []int) {
	return file_teacher_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTeacher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTeacher) GetExperienceYears() int32 {
	if x != nil {
		return x.ExperienceYears
	}
	return 0
}

func (x *CreateTeacher) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *CreateTeacher) GetProfilePictureUrl() string {
	if x != nil {
		return x.ProfilePictureUrl
	}
	return ""
}

func (x *CreateTeacher) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *CreateTeacher) GetGraduatedStudents() int32 {
	if x != nil {
		return x.GraduatedStudents
	}
	return 0
}

func (x *CreateTeacher) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type UpdateTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExperienceYears   int32   `protobuf:"varint,3,opt,name=experience_years,json=experienceYears,proto3" json:"experience_years,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,4,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	ProfilePictureUrl string  `protobuf:"bytes,5,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	Contact           string  `protobuf:"bytes,6,opt,name=contact,proto3" json:"contact,omitempty"`
	GraduatedStudents int32   `protobuf:"varint,7,opt,name=graduated_students,json=graduatedStudents,proto3" json:"graduated_students,omitempty"`
	Bio               string  `protobuf:"bytes,8,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (x *UpdateTeacher) Reset() {
	*x = UpdateTeacher{}
	mi := &file_teacher_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeacher) ProtoMessage() {}

func (x *UpdateTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_teacher_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeacher.ProtoReflect.Descriptor instead.
func (*UpdateTeacher) Descriptor() ([]byte, []int) {
	return file_teacher_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTeacher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTeacher) GetExperienceYears() int32 {
	if x != nil {
		return x.ExperienceYears
	}
	return 0
}

func (x *UpdateTeacher) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *UpdateTeacher) GetProfilePictureUrl() string {
	if x != nil {
		return x.ProfilePictureUrl
	}
	return ""
}

func (x *UpdateTeacher) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *UpdateTeacher) GetGraduatedStudents() int32 {
	if x != nil {
		return x.GraduatedStudents
	}
	return 0
}

func (x *UpdateTeacher) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type TeacherRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExperienceYears   int32   `protobuf:"varint,3,opt,name=experience_years,json=experienceYears,proto3" json:"experience_years,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,4,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	ProfilePictureUrl string  `protobuf:"bytes,5,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	Contact           string  `protobuf:"bytes,6,opt,name=contact,proto3" json:"contact,omitempty"`
	GraduatedStudents int32   `protobuf:"varint,7,opt,name=graduated_students,json=graduatedStudents,proto3" json:"graduated_students,omitempty"`
	Bio               string  `protobuf:"bytes,8,opt,name=bio,proto3" json:"bio,omitempty"`
	CreatedAt         string  `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *TeacherRes) Reset() {
	*x = TeacherRes{}
	mi := &file_teacher_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeacherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherRes) ProtoMessage() {}

func (x *TeacherRes) ProtoReflect() protoreflect.Message {
	mi := &file_teacher_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherRes.ProtoReflect.Descriptor instead.
func (*TeacherRes) Descriptor() ([]byte, []int) {
	return file_teacher_proto_rawDescGZIP(), []int{2}
}

func (x *TeacherRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeacherRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeacherRes) GetExperienceYears() int32 {
	if x != nil {
		return x.ExperienceYears
	}
	return 0
}

func (x *TeacherRes) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *TeacherRes) GetProfilePictureUrl() string {
	if x != nil {
		return x.ProfilePictureUrl
	}
	return ""
}

func (x *TeacherRes) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *TeacherRes) GetGraduatedStudents() int32 {
	if x != nil {
		return x.GraduatedStudents
	}
	return 0
}

func (x *TeacherRes) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *TeacherRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetListTeacherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExperienceYearsMin   int32   `protobuf:"varint,2,opt,name=experience_years_min,json=experienceYearsMin,proto3" json:"experience_years_min,omitempty"`
	ExperienceYearsMax   int32   `protobuf:"varint,3,opt,name=experience_years_max,json=experienceYearsMax,proto3" json:"experience_years_max,omitempty"`
	IeltsScoreMin        float32 `protobuf:"fixed32,4,opt,name=ielts_score_min,json=ieltsScoreMin,proto3" json:"ielts_score_min,omitempty"`
	IeltsScoreMax        float32 `protobuf:"fixed32,5,opt,name=ielts_score_max,json=ieltsScoreMax,proto3" json:"ielts_score_max,omitempty"`
	GraduatedStudentsMin int32   `protobuf:"varint,6,opt,name=graduated_students_min,json=graduatedStudentsMin,proto3" json:"graduated_students_min,omitempty"`
	GraduatedStudentsMax int32   `protobuf:"varint,7,opt,name=graduated_students_max,json=graduatedStudentsMax,proto3" json:"graduated_students_max,omitempty"`
	Filter               *Filter `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetListTeacherReq) Reset() {
	*x = GetListTeacherReq{}
	mi := &file_teacher_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTeacherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTeacherReq) ProtoMessage() {}

func (x *GetListTeacherReq) ProtoReflect() protoreflect.Message {
	mi := &file_teacher_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTeacherReq.ProtoReflect.Descriptor instead.
func (*GetListTeacherReq) Descriptor() ([]byte, []int) {
	return file_teacher_proto_rawDescGZIP(), []int{3}
}

func (x *GetListTeacherReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetListTeacherReq) GetExperienceYearsMin() int32 {
	if x != nil {
		return x.ExperienceYearsMin
	}
	return 0
}

func (x *GetListTeacherReq) GetExperienceYearsMax() int32 {
	if x != nil {
		return x.ExperienceYearsMax
	}
	return 0
}

func (x *GetListTeacherReq) GetIeltsScoreMin() float32 {
	if x != nil {
		return x.IeltsScoreMin
	}
	return 0
}

func (x *GetListTeacherReq) GetIeltsScoreMax() float32 {
	if x != nil {
		return x.IeltsScoreMax
	}
	return 0
}

func (x *GetListTeacherReq) GetGraduatedStudentsMin() int32 {
	if x != nil {
		return x.GraduatedStudentsMin
	}
	return 0
}

func (x *GetListTeacherReq) GetGraduatedStudentsMax() int32 {
	if x != nil {
		return x.GraduatedStudentsMax
	}
	return 0
}

func (x *GetListTeacherReq) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetListTeacherRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teacher    []*TeacherRes `protobuf:"bytes,1,rep,name=teacher,proto3" json:"teacher,omitempty"`
	TotalCount int32         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetListTeacherRes) Reset() {
	*x = GetListTeacherRes{}
	mi := &file_teacher_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTeacherRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTeacherRes) ProtoMessage() {}

func (x *GetListTeacherRes) ProtoReflect() protoreflect.Message {
	mi := &file_teacher_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTeacherRes.ProtoReflect.Descriptor instead.
func (*GetListTeacherRes) Descriptor() ([]byte, []int) {
	return file_teacher_proto_rawDescGZIP(), []int{4}
}

func (x *GetListTeacherRes) GetTeacher() []*TeacherRes {
	if x != nil {
		return x.Teacher
	}
	return nil
}

func (x *GetListTeacherRes) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_teacher_proto protoreflect.FileDescriptor

var file_teacher_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x2d, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x67, 0x72,
	0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69,
	0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x59, 0x65, 0x61,
	0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x2d, 0x0a,
	0x12, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x67, 0x72, 0x61, 0x64, 0x75,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x69, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x22, 0xa6,
	0x02, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x75,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xee, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x59, 0x65, 0x61, 0x72, 0x73,
	0x4d, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x59, 0x65, 0x61,
	0x72, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d,
	0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x34, 0x0a, 0x16, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x67,
	0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x67, 0x72, 0x61,
	0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x61,
	0x78, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xf8, 0x01, 0x0a, 0x0e,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x79, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x42, 0x19, 0x5a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teacher_proto_rawDescOnce sync.Once
	file_teacher_proto_rawDescData = file_teacher_proto_rawDesc
)

func file_teacher_proto_rawDescGZIP() []byte {
	file_teacher_proto_rawDescOnce.Do(func() {
		file_teacher_proto_rawDescData = protoimpl.X.CompressGZIP(file_teacher_proto_rawDescData)
	})
	return file_teacher_proto_rawDescData
}

var file_teacher_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_teacher_proto_goTypes = []any{
	(*CreateTeacher)(nil),     // 0: proto.CreateTeacher
	(*UpdateTeacher)(nil),     // 1: proto.UpdateTeacher
	(*TeacherRes)(nil),        // 2: proto.TeacherRes
	(*GetListTeacherReq)(nil), // 3: proto.GetListTeacherReq
	(*GetListTeacherRes)(nil), // 4: proto.GetListTeacherRes
	(*Filter)(nil),            // 5: proto.Filter
	(*ById)(nil),              // 6: proto.ById
	(*Void)(nil),              // 7: proto.Void
}
var file_teacher_proto_depIdxs = []int32{
	5, // 0: proto.GetListTeacherReq.filter:type_name -> proto.Filter
	2, // 1: proto.GetListTeacherRes.teacher:type_name -> proto.TeacherRes
	0, // 2: proto.TeacherService.Create:input_type -> proto.CreateTeacher
	1, // 3: proto.TeacherService.Update:input_type -> proto.UpdateTeacher
	6, // 4: proto.TeacherService.Delete:input_type -> proto.ById
	6, // 5: proto.TeacherService.GetById:input_type -> proto.ById
	3, // 6: proto.TeacherService.GetList:input_type -> proto.GetListTeacherReq
	7, // 7: proto.TeacherService.Create:output_type -> proto.Void
	7, // 8: proto.TeacherService.Update:output_type -> proto.Void
	7, // 9: proto.TeacherService.Delete:output_type -> proto.Void
	2, // 10: proto.TeacherService.GetById:output_type -> proto.TeacherRes
	4, // 11: proto.TeacherService.GetList:output_type -> proto.GetListTeacherRes
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_teacher_proto_init() }
func file_teacher_proto_init() {
	if File_teacher_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teacher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teacher_proto_goTypes,
		DependencyIndexes: file_teacher_proto_depIdxs,
		MessageInfos:      file_teacher_proto_msgTypes,
	}.Build()
	File_teacher_proto = out.File
	file_teacher_proto_rawDesc = nil
	file_teacher_proto_goTypes = nil
	file_teacher_proto_depIdxs = nil
}
