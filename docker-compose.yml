services:
  migrate:
    image: migrate/migrate
    networks:
      - everest
    volumes:
      - ./submodule/migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://postgres:1111@db:5432/everest?sslmode=disable", "up"]
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: everest_d
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: everest
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - everest
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d everest"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis-everes
    ports:
      - "6379:6379"
    networks:
      - everest

  everest-service:
    container_name: everest-servic
    build: .
    ports:
      - "8080:8080"
    volumes:
      - ./internal/media:/app/internal/media
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - everest

  minio:
    image: minio/minio
    container_name: mini
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=feruza
      - MINIO_SECRET_KEY=feruza17
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - everest

volumes:
  db:
  minio_data:

networks:
  everest:
    external: true
