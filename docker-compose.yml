version: "3.8"

services:
  migrate:
    image: migrate/migrate
    networks:
      - everest
    volumes:
      - ./submodule/migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable", "up"]
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: everest_db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}  # Will be 'postgres' from .env
      POSTGRES_PASSWORD: ${DB_PASSWORD}  # Will be 'root' from .env
      POSTGRES_DB: ${DB_NAME}  # Will be 'everest' from .env
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "${DB_PORT}:5432"
    networks:
      - everest
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis-everest
    ports:
      - "${REDIS_PORT}:6379"  # or "6380:6379" if you want to map it differently
    networks:
      - everest

  everest-service:
    container_name: everest-service
    build: .
    ports:
      - "${SERVER_PORT}"
    volumes:
      - ./internal/media:/app/internal/media
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - everest

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - everest

volumes:
  db:
  minio_data:

networks:
  everest:
    external: true
